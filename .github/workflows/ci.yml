name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 5 * * *'

env:
  DOCKER_BUILDKIT: 1
  DOCKER_NETWORK: ${{ github.run_id }}
  DOCKER_NETWORK_ALIAS: nginx-plus-test
  DOCKER_NGINX_PLUS: nginx-plus-${{ github.run_id }}
  DOCKER_NGINX_PLUS_HELPER: nginx-plus-helper-${{ github.run_id }}

jobs:

  build:
    name: Build Go Client
    runs-on: ubuntu-18.04
    if: (github.repository == 'nginxinc/nginx-plus-go-client')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Fetch Certificates
        env:
          CRT: ${{ secrets.NGINX_CRT }}
          KEY: ${{ secrets.NGINX_KEY }}
        run: |
          echo "${CRT}" | base64 --decode > docker/nginx-repo.crt
          echo "${KEY}" | base64 --decode > docker/nginx-repo.key
      - name: Build & Test Client
        if: (github.event_name != 'schedule')
        run: make test
      - name: Switch Repository (Nightly)
        if: (github.event_name == 'schedule')
        run: |
          sed -i 's|plus-pkgs|pkgs-test|g' docker/Dockerfile
          sed -i '20,31d' docker/Dockerfile
          sed -i 's|deb https|deb [trusted=yes] https|g' docker/Dockerfile
          sed -i 's|nginx-plus=\${NGINX_PLUS_VERSION}|nginx-plus|g' docker/Dockerfile
      - name: Build & Test Client (Nightly)
        if: (github.event_name == 'schedule')
        run: make test
        env:
          NGINX_PLUS_VERSION: nightly

  notify:
    name: Notify
    runs-on: ubuntu-18.04
    needs: build
    if: always() && github.ref == 'refs/heads/master'
    steps:
      - name: Workflow Status
        id: check
        uses: martialonline/workflow-status@v1
      - name: Output Variables
        id: commit
        run: |
          echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-7)"
          echo "::set-output name=repo::$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 2)"
      - name: Send Notification
        uses: 8398a7/action-slack@v3
        if: 
          steps.check.outputs.status == 'failure' || 
          steps.check.outputs.status == 'cancelled'
        with:
          status: custom
          custom_payload: |
            {
              username: 'Github',
              icon_emoji: ':octocat:',
              mention: 'channel',
              attachments: [{
                title: '${{ steps.commit.outputs.repo }} ${{ github.workflow }} pipeline has failed',
                color: '${{ steps.check.outputs.status }}' == 'failure' ? 'danger' : 'warning',
                fields: [{
                  title: 'Commit Hash',
                  value: '${{ steps.commit.outputs.sha }}',
                  short: true
                },
                {
                  title: 'Author',
                  value: '${{ github.actor }}',
                  short: true
                },
                {
                  title: 'Commit Message',
                  value: `${{ github.event.head_commit.message }}`,
                  short: false
                },
                {
                  title: 'Pipeline URL',
                  value: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
                  short: false
                }]
              }]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}